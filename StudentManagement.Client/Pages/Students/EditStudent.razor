@page "/student/edit/{id:int}"
@using StudentManagement.Client.Services;
@using StudentManagement.Shared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime
@rendermode InteractiveServer


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Update Students Details</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <EditForm Model="studobj" OnValidSubmit="UpdateStudent" FormName="updatestudent">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">First Name</label>
                                            <InputText for="FirstName" class="form-control" @bind-Value="@studobj.FirstName" />
                                            <ValidationMessage For="()=>studobj.FirstName" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Middle Name</label>
                                            <InputText for="MiddleName" class="form-control" @bind-Value="@studobj.MiddleName" />
                                            <ValidationMessage For="()=>studobj.MiddleName" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Last Name</label>
                                            <InputText for="LastName" class="form-control" @bind-Value="@studobj.LastName" />
                                            <ValidationMessage For="()=>studobj.LastName" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Email Address</label>
                                            <InputText for="EmailAddress" class="form-control" @bind-Value="@studobj.EmailAddress" />
                                            <ValidationMessage For="()=>studobj.EmailAddress" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Address</label>
                                            <InputText for="Address" class="form-control" @bind-Value="@studobj.Address" />
                                            <ValidationMessage For="()=>studobj.Address" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Phone Number</label>
                                            <InputText for="PhoneNumber" class="form-control" @bind-Value="@studobj.PhoneNumber" />
                                            <ValidationMessage For="()=>studobj.PhoneNumber" />
                                        </div>
                                    </div>
                                   
                                </div>
                                <div class="form-group mt-4">
                                    <button type="submit" class="btn btn-primary">Update Student</button>
                                    <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [SupplyParameterFromForm]
    public Student studobj { get; set; } = new();
   
    [Parameter]
    public int id { get; set; }

    // List<Country> Countries = new List<Country>();


    // List<SystemCodeDetail> Gender = new List<SystemCodeDetail>();

    protected override async Task OnInitializedAsync()
    {
        await LoadStudent();
        // Countries = await CountryService.GetAllAsync();
        // Gender = await SystemCodeDetailService.GetByCodeAsync("Gender");
    }
    public async Task LoadStudent()
    {
        studobj = await StudentService.GetAllStudentsByIdAsync(id);
       }


    protected async Task UpdateStudent()
    {
        var result = await StudentService.UpdateStudentAsync(studobj);
        navigation.NavigateTo("/students-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/students-list");
    }
}